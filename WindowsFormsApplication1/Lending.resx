<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QCqRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB0AAAALAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAxAC4AMAAgACgA
        dQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA4ADAAKQAsACAAcQB1AGEAbABpAHQAeQAgAD0A
        IAA5ADAACgAAAAAA/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwKDAwLCgsLDQ4SEA0OEQ4L
        CxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQUFBQUFBQUFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgAlgCWAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A/VKjvRRQAUZoooAKKKKACigUmQOtAC9qM00uvrS7wB1pXAWjNM81f73WlDKT
        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
        ADpRRRQB/9k=
</value>
  </data>
</root>